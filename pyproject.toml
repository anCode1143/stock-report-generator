[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "stock-report-generator"
version = "1.0.0"
description = "A comprehensive tool for generating stock analysis reports with data visualization, quantile analysis, and AI-powered insights using Google's Gemini API"
authors = [
    {name = "Can Atasever", email = "atasevec@tcd.ie"}
]
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
keywords = ["stock", "analysis", "trading", "ai", "gemini", "technical-analysis", "quantile-forecasting"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
]

dependencies = [
    "yfinance>=0.2.58",
    "pandas>=2.2.3",
    "pandas-ta>=0.3.14b0",
    "numpy>=1.26.4",
    "matplotlib>=3.10.1",
    "mplfinance>=0.12.10b0",
    "scikit-learn>=1.6.1",
    "scipy>=1.15.3",
    "google-generativeai>=0.8.5",
    "python-dotenv>=1.1.1",
    "reportlab>=4.4.2",
    "beautifulsoup4>=4.13.4",
    "markdown>=3.8",
    "requests>=2.32.3",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "black>=24.0.0",
    "ruff>=0.1.0",
]

[project.urls]
Homepage = "https://github.com/canatasever/stock-report-generator"
Repository = "https://github.com/canatasever/stock-report-generator"
Issues = "https://github.com/canatasever/stock-report-generator/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
stock_report_generator = ["*.env"]

# Black configuration
[tool.black]
line-length = 100
target-version = ["py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# Ruff configuration
[tool.ruff]
line-length = 100
target-version = "py39"

# Enable specific rule sets
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "SIM", # flake8-simplify
]

# Ignore specific rules
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

# Exclude directories
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py

[tool.ruff.isort]
known-first-party = ["stock_report_generator"]
